PRAGMA foreign_keys = ON;
DROP TABLE IF EXISTS "AccessPermissions";
CREATE TABLE "AccessPermissions" ( 
	CustomerID INTEGER NOT NULL, 
	IBAN TEXT NOT NULL, 
	PRIMARY KEY(CustomerID,IBAN), 
	FOREIGN KEY(CustomerID) REFERENCES CustomerAccounts(CustomerAccountID) ON DELETE CASCADE, 
	FOREIGN KEY(IBAN) REFERENCES BankAccounts(IBAN) ON DELETE CASCADE
);
DROP TABLE IF EXISTS "BankAccounts";
CREATE TABLE "BankAccounts" ( 
	IBAN TEXT NOT NULL PRIMARY KEY UNIQUE, 
	Saldo REAL, `MainCustomerID` INTEGER NOT NULL,
	FOREIGN KEY(MainCustomerID) REFERENCES CustomerAccounts(CustomerAccountID) 
);
DROP TABLE IF EXISTS "CustomerAccounts";
CREATE TABLE "CustomerAccounts" (
	CustomerAccountID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	Name TEXT NOT NULL,
	Surname TEXT NOT NULL,
	Initials TEXT NOT NULL,
	DOB	NUMERIC NOT NULL,
	BSN	INTEGER NOT NULL UNIQUE,
	Address	TEXT NOT NULL,
	Phone INTEGER NOT NULL,
	Email TEXT NOT NULL UNIQUE,
	Username TEXT NOT NULL UNIQUE,
	Password TEXT NOT NULL
);
DROP TABLE IF EXISTS "PinCards";
CREATE TABLE "PinCards" ( 
	PinCardID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE, 
	ExpirationDate NUMERIC NOT NULL, 
	PIN TEXT NOT NULL, 
	CustomerID INTEGER NOT NULL, 
	IBAN TEXT NOT NULL, 
	FOREIGN KEY(CustomerID) REFERENCES CustomerAccounts(CustomerAccountID) ON DELETE CASCADE, 
	FOREIGN KEY(IBAN) REFERENCES BankAccounts(IBAN) ON DELETE CASCADE,
	FOREIGN KEY(CustomerID,IBAN) REFERENCES AccessPermissions(CustomerID,IBAN) ON DELETE CASCADE
);
DROP TABLE IF EXISTS "Transactions";
CREATE TABLE "Transactions" (
	TransactionID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT UNIQUE,
	Amount REAL NOT NULL,
	Usage TEXT,
	TransactionTime	NUMERIC NOT NULL,
	ReceiverName TEXT,
	SenderIBAN TEXT NOT NULL,
	ReceiverIBAN TEXT NOT NULL
)